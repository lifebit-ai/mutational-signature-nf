// Please do not change the order of the numbered sections!
// The expected order is: 1. Parameters - 2. Profiles - 3. Process -  4. Executor

// There is a high chance it would break the configuration of 'profiles'

// 1. Parameters

// NOTE: 
// Initialise the values of the params to the preferred default value or to false
params {
    // output folder options
    outdir          = 'results'
    tracedir        = "${params.outdir}/pipeline_info"

    // client-specific variables to be used in pipeline introspection reporting
    raci_owner      = "NA"
    domain_keywords = "NA"
    
    // inputs
    input = false
    organ = "Breast"
    bootstrap = true
    vcf_files = null
    genome_version = "hg38" // hg19 or hg38
    signaturefit_options = null // all the string options
    preparedata_options = null // all the string options

    // report_dir is:
    // - the folder from the container that includes the scripts for NF <= v20.01 (bin)
    // - the ${projectDir}/bin folder of the root of the repo with the scripts for NF >= v20.10
    report_dir = '/opt/bin/'

    // when set to true, prints help and exits
    help = false
    
    // default container for all processes, excluding those defined differently via the usage with 'withName'
    container = 'quay.io/lifebitai/ubuntu:18.10'

    // process resources defaults
    cpus   = 2
    memory = 4.GB
    disk   = '30.GB'
    
    // max resources limits defaults
    max_cpus   = 2
    max_memory = 6.GB
    max_time   = 8.h
    
    // execution related defaults
    config        = 'conf/standard.config'
    echo          = false
    errorStrategy = 'ignore' //{ task.exitStatus in [143,137,104,134,139] ? 'retry' : 'terminate' }
    maxRetries    = 9
    maxForks      = 200
    queueSize     = 200
    executor      = false

    // google-lifesciences
    gls_bootDiskSize = '50.GB'
    gls_preemptible  = true
    zone             = 'us-east1-b'
    network          = 'default'
    subnetwork       = 'default'
}


// 2. Profiles


// Do not update the order because the values set in params scope will not be overwritten
// Do not attempt to simplify to 
// includeConfig params.config 
// outside of profiles scope, it will fail to update the values of the params
profiles {
    standard {includeConfig params.config}
    docker { docker.enabled = true }
    base {includeConfig 'conf/base.config'}
    google {includeConfig 'conf/google.config'}
    test {includeConfig 'conf/test.config'}
    local {includeConfig 'conf/test.config'}
    gel {includeConfig 'conf/gel.config'}
    bi {includeConfig 'conf/bi.config'}
    cambridge {includeConfig 'conf/cambridge.config'}
    finngen { includeConfig 'conf/finngen.config' }
    jax {includeConfig 'conf/jax.config'}
    internal_lifebit_gcp { includeConfig 'conf/internal_lifebit_gcp.config' }
    internal_lifebit_aws { includeConfig 'conf/internal_lifebit_aws.config' }
}

// 3. Process

// Do not change order of block, must follow after profiles scope (last section that updates params)
process {
    echo          = params.echo
    cpus          = params.cpus
    memory        = params.memory
    maxRetries    = params.maxRetries
    maxForks      = params.maxForks
    container     = params.container
    errorStrategy = params.errorStrategy
  
    withLabel: awscli_bcftools {
        cpus      = 1
        memory    = '2.GB'
        container = 'quay.io/lifebitaiorg/awscli_bcftools_comb:v0.1'
    }
    
    withLabel: utility_scripts {
        disk      = '30.GB'
        cpus      = params.cpus
        memory    = params.memory
        container = 'quay.io/lifebitai/utility_scripts:b586275'
    }

    withLabel: signature_tool_lib {
        disk      = '30.GB'
        cpus      = params.cpus
        memory    = params.memory
        container = 'quay.io/lifebitai/signature_tool_lib:1e58326'
    }
    
}

// 4. Executor - Do not remove this section! Required for running with different executors using --executor parameter

executor {
    name      = params.executor
    queueSize = params.queueSize
}

// 5. Nextflow timeline, report and trace reports

def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.tracedir}/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.tracedir}/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    fields  = 'task_id,native_id,process,name,tag,status,exit,cpus,%cpu,memory,%mem,rss,vmem,peak_rss,peak_rss,container'
    file    = "${params.tracedir}/execution_trace_${trace_timestamp}.txt"
}

// 6. Manifest

manifest {
    name            = 'lifebit-ai/xxxx'
    homePage        = 'https://github.com/xxxx'
    description     = 'Pipeline description'
    mainScript      = 'main.nf'
    version         = "1.0dev"
}

// Function to ensure that resource requirements don't go beyond
// a maximum limit
def check_max(obj, type) {
  if (type == 'memory') {
    try {
      if (obj.compareTo(params.max_memory as nextflow.util.MemoryUnit) == 1)
        return params.max_memory as nextflow.util.MemoryUnit
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max memory '${params.max_memory}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'time') {
    try {
      if (obj.compareTo(params.max_time as nextflow.util.Duration) == 1)
        return params.max_time as nextflow.util.Duration
      else
        return obj
    } catch (all) {
      println "   ### ERROR ###   Max time '${params.max_time}' is not valid! Using default value: $obj"
      return obj
    }
  } else if (type == 'cpus') {
    try {
      return Math.min( obj, params.max_cpus as int )
    } catch (all) {
      println "   ### ERROR ###   Max cpus '${params.max_cpus}' is not valid! Using default value: $obj"
      return obj
    }
  }
}
